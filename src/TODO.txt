2010/03/21
* (Pending)Write a Builder to 
	+ construct concrete DatabaseInterface objects
	+ Using XML drivers to access Master Preference Table.

* (Pending)Design Master database table, purpose:
	+ store program's configurations
	+ store known databases' connection methods

* Virtual Destructors![done]

2010/03/22
* Program Architecture
	+ main function create Master object
	+ Create UI Layer accroding to Mater's preferences.
	+ (Required by UI Layer) Master object create database connection session
	+ UI Layer acqurie the pointer to Database object
	+ (Required by UI Layer) take actions, Using Database::*man().

2010/03/25
* Testcases
* Foundmentals
	+ [done]unistr:
		unistr::number
		unistr:unistr(char*);
	+ taglist_t
		[done]taglist_t::add_distinct;

2010/03/25
* Database::last_serial

2010/04/21
- System Configurations?
- Change Widget related to Database from Editor to Viewer [done@0501]
- Build bridges between UI and kernel, Considering MVC

2010/05/01
* Add merge to merge two tag groups
	- each group share the same tnode

2010/05/01
- A toolbar is needed for TabEdit [done@0502]
- Drag&Drop support, design binary layout for tag_t, tnode_t, etc.
- Consider TagEditor's implementation, inherit QAbstractItemView? Written a QWidget's subclass? [done@0502, QWidget's subclass]
- SQL generator for Edit actions, that also means we must log actions. Action Pattern should be used. [withdrawed@0502, see 0502-01]

2010/05/02
- (0502-01) Design unified "New/Update" action process for TagEdit. 
- Write another layer beyond ***Man class, for undo/redo support
	- log sql sentences is enough
	- don't use transactions as we want all sql lang don't send to sql layer until saves
		+ However, a problem: non-relative modification


2010/05/08
* Impl. all tag_edit_action's subclass and theirs factory methods [done]
* adjust code to remove "primary name" [done@09]
* add icon to actions in gui [done@09]
* add load data to gui [part]
* add model to viewer.
	- tag search result model. [done]
	- alias model.
* test undo/redo, db rollback
* MIME type and kernel object's binary layout
* we may need a exception model ...

2010/05/09
* enhance tag search result model
	- fix a small bug for showing mastername [done@20, TagMan.cpp, mistake judgement on no tnode tag]
* adjust GUI [pending]
	- easier to use and understand
		+ passed, need future design [@20]
	- current design is too narrow to use
		+ remove one tageditor [@20]
		+ future optimization is needed
* enhance load data to gui function [pending@20]
	- extensible
* fix bugs in TagEditContext and TagEdit
	- many bugs, such as dumplicated triggered signals
		+ fix: forgot to clear undo stack after commit changes
		+ fix: redo-undo's intraction with ui
		+ fix: focus issue, making it easier to switch LineEdit's undo-redo and TagEdit's undo-redo
* test undo/redo, db rollback [delayed]
	- foundation to next work
* MIME type and kernel object's binary layout [done@20]
	- foundation of drag&drop
		- drag&drop is the base of facility of alias and tagging
* merging's implementation. [delayed]
* add model to alias viewer [delayed]

2010/05/20
* enhance load data to gui function
	- extensible
* test undo/redo, db rollback
	- foundation to next work
		+ fix: comment edition [done@22]
	- problem: test what?
		+ no merge, no test..
* merging's implementation. [removed@22]
* add model to alias viewer
* Drag&Drop Support

2010/05/22
* Writing GUI's usecase!
	- f**k I can't coding because GUI's usecases are always changing!
* Redesign TagManContext
* As UI redesigned, following function shall be changed:
	- chpname shall be removed
	- alias shall be enhanced to meet GUI's model part's need
	- more predicted change protocol
	- Redo/Undo System shall be improved, dumplicated SQL executions can't be dimissed in current design.

2010/06/27
下一步目标：
[kernel]编写tag之间tag的功能
	- written @ 07/18, untested
	- testcase written @ 07/20, compile passed but still untested
[kernel]编写基于tagging搜索的功能，加入部分搜索功能
	ps：SQLITE竟然支持REGEXP！
[gui]编写alias的添加删除界面
[gui]使用diff代替步进操作的undo/redo
[gui]分离各个编辑窗口的undo/redo功能，善用GUI Widget自己提供的Undo/Redo来降低编程复杂度
	- 已经将TagEditContext从kernel项目中移除，下一步是将其从版本库中移除。
[gui]采用编辑|查找|查看的分栏方式
[gui]编写tag tag的功能
[gui]drag drop支持
	- pending, 作为一个preview/alpha这还太高级了
	- 作为更高级的tagtag UI，在之后的版本实现
[kernel] 确定文件对象的结构――也即此程序认识资源的方法。
